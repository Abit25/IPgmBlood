{"ast":null,"code":"var _jsxFileName = \"/Users/priya/Desktop/IPgm/onelife/src/components/map.js\";\nimport React, { Component, createRef } from \"react\";\nimport { Navbar, Nav, Form, Row, Col, Popover, OverlayTrigger, Spinner, Button } from \"react-bootstrap\";\nimport img2 from \"./heart.png\";\nimport img from \"./question.png\";\nimport \"./map.css\";\nconst popover = React.createElement(Popover, {\n  id: \"popover-basic\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}, React.createElement(Popover.Title, {\n  as: \"h3\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}, \"Help\"), React.createElement(Popover.Content, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}, \"Listed towards your left are some symptoms/signs .You can select one or more as applicable.\"));\n\nconst Example = () => React.createElement(OverlayTrigger, {\n  trigger: \"click\",\n  placement: \"left\",\n  overlay: popover,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28\n  },\n  __self: this\n}, React.createElement(\"img\", {\n  src: img,\n  style: {\n    height: \"35px\",\n    width: \"35px\",\n    position: \"absolute\",\n    right: \"3vw\",\n    top: \"35vh\"\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32\n  },\n  __self: this\n}));\n\nclass GoogleMap extends Component {\n  constructor(props) {\n    super(props);\n\n    this.createGoogleMap = () => {\n      console.log(\"1\");\n      var map = new window.google.maps.Map(this.googleMapRef.current, {\n        zoom: 14,\n        center: {\n          lat: 19.0968,\n          lng: 72.8517\n        }\n      });\n      return map;\n    };\n\n    this.createMarker = () => {\n      // var myLatLng = { lat: 43.642567, lng: -79.387054 };\n      // var marker = new window.google.maps.Marker({\n      //   position: myLatLng,\n      //   map: this.googleMap\n      // });\n      var myLatLng = 0;\n      window.navigator.geolocation.getCurrentPosition(pos => {\n        myLatLng = {\n          lat: pos.coords.latitude,\n          lng: pos.coords.longitude\n        }; // console.log(\"2\");\n        // console.log(this.googleMap);\n        // console.log(pos.coords.latitude, pos.coords.longitude);\n\n        var marker = new window.google.maps.Marker({\n          position: myLatLng,\n          map: this.googleMap,\n          title: \"You are here\"\n        });\n        this.googleMap.setCenter({\n          lat: pos.coords.latitude,\n          lng: pos.coords.longitude\n        });\n        var pyrmont = new window.google.maps.LatLng(myLatLng.lat, myLatLng.long);\n        var request = {\n          location: pyrmont,\n          radius: \"3000\",\n          query: \"hospital\"\n        };\n        var service = new window.google.maps.places.PlacesService(this.googleMap);\n        service.textSearch(request, this.callback);\n        var geocoder = new window.google.maps.Geocoder();\n        geocoder.geocode({\n          location: myLatLng\n        }, (results, status) => {\n          if (status === \"OK\") {\n            if (results[0]) {\n              console.log(results[0].formatted_address);\n              this.setState({\n                address: results[0].formatted_address\n              });\n            }\n          }\n        });\n      });\n    };\n\n    this.callback = (results, status) => {\n      this.setState({\n        hospitals: results.slice(0, 5)\n      });\n      console.log(this.state);\n\n      if (status == window.google.maps.places.PlacesServiceStatus.OK) {\n        for (var i = 0; i < 5; i++) {\n          var place = results[i];\n          var marker2 = new window.google.maps.Marker({\n            position: place.geometry.location,\n            map: this.googleMap,\n            title: place.name\n          });\n        }\n      }\n    };\n\n    this.selHospital = e => {\n      console.log(e.target.value);\n      this.setState({\n        hospitalsel: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      if (!this.state.address) {\n        alert(\"Please wait for the map to load\");\n      } else {\n        console.log(\"State is \", this.state);\n      }\n    };\n\n    this.state = {};\n    this.googleMapRef = createRef();\n  }\n\n  componentDidMount() {\n    const googleMapScript = document.createElement(\"script\");\n    googleMapScript.src = \"https://maps.googleapis.com/maps/api/js?key=\".concat(\"AIzaSyCpSyVOMNaAH_omRZGK_iRn1u_91Ot0Rcw\", \"&libraries=places\");\n    window.document.body.appendChild(googleMapScript);\n    googleMapScript.addEventListener(\"load\", () => {\n      this.googleMap = this.createGoogleMap(); // console.log(this.googleMap);\n\n      this.marker = this.createMarker();\n    });\n  }\n\n  render() {\n    let hospitals;\n\n    if (this.state.hospitals) {\n      hospitals = this.state.hospitals.map(hospital => {\n        return React.createElement(\"div\", {\n          style: {\n            marginLeft: \"3vw\",\n            marginTop: \"3vh\"\n          },\n          key: \"\".concat(hospital.name),\n          className: \"mb-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153\n          },\n          __self: this\n        }, React.createElement(Form.Check, {\n          onChange: this.selHospital,\n          name: \"hospitalsel\",\n          type: \"radio\",\n          id: \"default-radio\",\n          label: \"\".concat(hospital.name),\n          value: \"\".concat(hospital.name),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158\n          },\n          __self: this\n        }));\n      });\n    } else {\n      hospitals = React.createElement(Spinner, {\n        animation: \"border\",\n        role: \"status\",\n        style: {\n          marginLeft: \"4vw\",\n          marginTop: \"6vh\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"sr-only\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, \"Loading...\"));\n    }\n\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      bg: \"dark\",\n      variant: \"dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(Navbar.Brand, {\n      href: \"#home\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      alt: \"\",\n      src: \"/logo.svg\",\n      width: \"30\",\n      height: \"30\",\n      className: \"d-inline-block align-top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }), \"One Life\"), React.createElement(Nav.Link, {\n      href: \"#home\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: img2,\n      style: {\n        height: \"40px\",\n        width: \"40px\",\n        textAlign: \"right\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      id: \"google-map\",\n      ref: this.googleMapRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }), React.createElement(Example, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }), React.createElement(Form, {\n      id: \"my-form\",\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      style: {\n        width: \"18vw\"\n      },\n      placeholder: \"First name\",\n      onChange: e => {\n        this.setState({\n          fname: e.target.value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    })), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      style: {\n        width: \"18vw\"\n      },\n      placeholder: \"Last name\",\n      onChange: e => {\n        this.setState({\n          lname: e.target.value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      style: {\n        width: \"18vw\",\n        marginTop: \"4vh\"\n      },\n      placeholder: \"Phone Number\",\n      onChange: e => {\n        this.setState({\n          phone: e.target.value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    })), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      style: {\n        width: \"18vw\",\n        marginTop: \"4vh\"\n      },\n      placeholder: \"Age\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }))), React.createElement(Row, {\n      style: {\n        marginTop: \"3vh\",\n        width: \"7vw\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"formBasicCheckbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, React.createElement(Form.Check, {\n      type: \"checkbox\",\n      label: \"Bleeding\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    })))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"formBasicCheckbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, React.createElement(Form.Check, {\n      type: \"checkbox\",\n      label: \"Severe Bleeding/Concussion\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    })))), React.createElement(Row, {\n      style: {\n        width: \"7vw\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"formBasicCheckbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, React.createElement(Form.Check, {\n      type: \"checkbox\",\n      label: \"Unconscious\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    })))), React.createElement(Row, {\n      style: {\n        width: \"10vw\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"formBasicCheckbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, React.createElement(Form.Check, {\n      type: \"checkbox\",\n      label: \"Animal Bite\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    })))), React.createElement(Row, {\n      style: {\n        width: \"10vw\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"formBasicCheckbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, React.createElement(Form.Check, {\n      type: \"checkbox\",\n      label: \"Heart Attack\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    })))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      id: \"hospitalsel\",\n      disabled: true,\n      style: {\n        width: \"38vw\",\n        marginTop: \"2vh\"\n      },\n      placeholder: this.state.hospitalsel || \"Choose a Hospital\",\n      value: this.state.hospitalsel || \"Choose a Hospital\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.onSubmit,\n      variant: \"danger\",\n      style: {\n        width: \"25vw\",\n        marginTop: \"10vh\",\n        marginLeft: \"5vw\",\n        height: \"8vh\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, \"Help Me\")))), hospitals);\n  }\n\n}\n\nexport default GoogleMap;","map":{"version":3,"sources":["/Users/priya/Desktop/IPgm/onelife/src/components/map.js"],"names":["React","Component","createRef","Navbar","Nav","Form","Row","Col","Popover","OverlayTrigger","Spinner","Button","img2","img","popover","Example","height","width","position","right","top","GoogleMap","constructor","props","createGoogleMap","console","log","map","window","google","maps","Map","googleMapRef","current","zoom","center","lat","lng","createMarker","myLatLng","navigator","geolocation","getCurrentPosition","pos","coords","latitude","longitude","marker","Marker","googleMap","title","setCenter","pyrmont","LatLng","long","request","location","radius","query","service","places","PlacesService","textSearch","callback","geocoder","Geocoder","geocode","results","status","formatted_address","setState","address","hospitals","slice","state","PlacesServiceStatus","OK","i","place","marker2","geometry","name","selHospital","e","target","value","hospitalsel","onSubmit","alert","componentDidMount","googleMapScript","document","createElement","src","body","appendChild","addEventListener","render","hospital","marginLeft","marginTop","textAlign","fname","lname","phone"],"mappings":"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","sourcesContent":["import React, { Component, createRef } from \"react\";\nimport {\n  Navbar,\n  Nav,\n  Form,\n  Row,\n  Col,\n  Popover,\n  OverlayTrigger,\n  Spinner,\n  Button\n} from \"react-bootstrap\";\nimport img2 from \"./heart.png\";\nimport img from \"./question.png\";\nimport \"./map.css\";\n\nconst popover = (\n  <Popover id=\"popover-basic\">\n    <Popover.Title as=\"h3\">Help</Popover.Title>\n    <Popover.Content>\n      Listed towards your left are some symptoms/signs .You can select one or\n      more as applicable.\n    </Popover.Content>\n  </Popover>\n);\n\nconst Example = () => (\n  <OverlayTrigger trigger=\"click\" placement=\"left\" overlay={popover}>\n    {/* <Button variant=\"success\" style={{ marginTop: \"15vh\", marginLeft: \"4vw\" }}>\n      What am I supposed to do now ?\n    </Button> */}\n    <img\n      src={img}\n      style={{\n        height: \"35px\",\n        width: \"35px\",\n        position: \"absolute\",\n        right: \"3vw\",\n        top: \"35vh\"\n      }}\n    />\n  </OverlayTrigger>\n);\n\nclass GoogleMap extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.googleMapRef = createRef();\n  }\n\n  componentDidMount() {\n    const googleMapScript = document.createElement(\"script\");\n    googleMapScript.src = `https://maps.googleapis.com/maps/api/js?key=${\"AIzaSyCpSyVOMNaAH_omRZGK_iRn1u_91Ot0Rcw\"}&libraries=places`;\n    window.document.body.appendChild(googleMapScript);\n\n    googleMapScript.addEventListener(\"load\", () => {\n      this.googleMap = this.createGoogleMap();\n      // console.log(this.googleMap);\n      this.marker = this.createMarker();\n    });\n  }\n\n  createGoogleMap = () => {\n    console.log(\"1\");\n    var map = new window.google.maps.Map(this.googleMapRef.current, {\n      zoom: 14,\n      center: {\n        lat: 19.0968,\n        lng: 72.8517\n      }\n    });\n    return map;\n  };\n\n  createMarker = () => {\n    // var myLatLng = { lat: 43.642567, lng: -79.387054 };\n    // var marker = new window.google.maps.Marker({\n    //   position: myLatLng,\n    //   map: this.googleMap\n    // });\n    var myLatLng = 0;\n    window.navigator.geolocation.getCurrentPosition(pos => {\n      myLatLng = { lat: pos.coords.latitude, lng: pos.coords.longitude };\n\n      // console.log(\"2\");\n      // console.log(this.googleMap);\n      // console.log(pos.coords.latitude, pos.coords.longitude);\n      var marker = new window.google.maps.Marker({\n        position: myLatLng,\n        map: this.googleMap,\n        title: \"You are here\"\n      });\n      this.googleMap.setCenter({\n        lat: pos.coords.latitude,\n        lng: pos.coords.longitude\n      });\n      var pyrmont = new window.google.maps.LatLng(myLatLng.lat, myLatLng.long);\n      var request = {\n        location: pyrmont,\n        radius: \"3000\",\n        query: \"hospital\"\n      };\n\n      var service = new window.google.maps.places.PlacesService(this.googleMap);\n      service.textSearch(request, this.callback);\n      var geocoder = new window.google.maps.Geocoder();\n\n      geocoder.geocode({ location: myLatLng }, (results, status) => {\n        if (status === \"OK\") {\n          if (results[0]) {\n            console.log(results[0].formatted_address);\n            this.setState({ address: results[0].formatted_address });\n          }\n        }\n      });\n    });\n  };\n\n  callback = (results, status) => {\n    this.setState({ hospitals: results.slice(0, 5) });\n    console.log(this.state);\n    if (status == window.google.maps.places.PlacesServiceStatus.OK) {\n      for (var i = 0; i < 5; i++) {\n        var place = results[i];\n        var marker2 = new window.google.maps.Marker({\n          position: place.geometry.location,\n          map: this.googleMap,\n          title: place.name\n        });\n      }\n    }\n  };\n\n  selHospital = e => {\n    console.log(e.target.value);\n    this.setState({ hospitalsel: e.target.value });\n  };\n\n  onSubmit = e => {\n    if (!this.state.address) {\n      alert(\"Please wait for the map to load\");\n    } else {\n      console.log(\"State is \", this.state);\n    }\n  };\n\n  render() {\n    let hospitals;\n    if (this.state.hospitals) {\n      hospitals = this.state.hospitals.map(hospital => {\n        return (\n          <div\n            style={{ marginLeft: \"3vw\", marginTop: \"3vh\" }}\n            key={`${hospital.name}`}\n            className=\"mb-3\"\n          >\n            <Form.Check\n              onChange={this.selHospital}\n              name=\"hospitalsel\"\n              type={\"radio\"}\n              id={`default-radio`}\n              label={`${hospital.name}`}\n              value={`${hospital.name}`}\n            />\n          </div>\n        );\n      });\n    } else {\n      hospitals = (\n        <Spinner\n          animation=\"border\"\n          role=\"status\"\n          style={{ marginLeft: \"4vw\", marginTop: \"6vh\" }}\n        >\n          <span className=\"sr-only\">Loading...</span>\n        </Spinner>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <Navbar bg=\"dark\" variant=\"dark\">\n          <Navbar.Brand href=\"#home\">\n            <img\n              alt=\"\"\n              src=\"/logo.svg\"\n              width=\"30\"\n              height=\"30\"\n              className=\"d-inline-block align-top\"\n            />\n            {\"One Life\"}\n          </Navbar.Brand>\n          <Nav.Link href=\"#home\">\n            <img\n              src={img2}\n              style={{ height: \"40px\", width: \"40px\", textAlign: \"right\" }}\n            />\n          </Nav.Link>\n        </Navbar>\n        <div id=\"google-map\" ref={this.googleMapRef} />\n        <Example />\n        <Form id=\"my-form\" onSubmit={this.onSubmit}>\n          <Row>\n            <Col>\n              <Form.Control\n                style={{ width: \"18vw\" }}\n                placeholder=\"First name\"\n                onChange={e => {\n                  this.setState({ fname: e.target.value });\n                }}\n              />\n            </Col>\n            <Col>\n              <Form.Control\n                style={{ width: \"18vw\" }}\n                placeholder=\"Last name\"\n                onChange={e => {\n                  this.setState({ lname: e.target.value });\n                }}\n              />\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Form.Control\n                style={{ width: \"18vw\", marginTop: \"4vh\" }}\n                placeholder=\"Phone Number\"\n                onChange={e => {\n                  this.setState({ phone: e.target.value });\n                }}\n              />\n            </Col>\n            <Col>\n              <Form.Control\n                style={{ width: \"18vw\", marginTop: \"4vh\" }}\n                placeholder=\"Age\"\n              />\n            </Col>\n          </Row>\n          <Row style={{ marginTop: \"3vh\", width: \"7vw\" }}>\n            <Col>\n              <Form.Group controlId=\"formBasicCheckbox\">\n                <Form.Check type=\"checkbox\" label=\"Bleeding\" />\n              </Form.Group>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Form.Group controlId=\"formBasicCheckbox\">\n                <Form.Check\n                  type=\"checkbox\"\n                  label=\"Severe Bleeding/Concussion\"\n                />\n              </Form.Group>\n            </Col>\n          </Row>\n          <Row style={{ width: \"7vw\" }}>\n            <Col>\n              <Form.Group controlId=\"formBasicCheckbox\">\n                <Form.Check type=\"checkbox\" label=\"Unconscious\" />\n              </Form.Group>\n            </Col>\n          </Row>\n          <Row style={{ width: \"10vw\" }}>\n            <Col>\n              <Form.Group controlId=\"formBasicCheckbox\">\n                <Form.Check type=\"checkbox\" label=\"Animal Bite\" />\n              </Form.Group>\n            </Col>\n          </Row>\n          <Row style={{ width: \"10vw\" }}>\n            <Col>\n              <Form.Group controlId=\"formBasicCheckbox\">\n                <Form.Check type=\"checkbox\" label=\"Heart Attack\" />\n              </Form.Group>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Form.Control\n                id=\"hospitalsel\"\n                disabled\n                style={{ width: \"38vw\", marginTop: \"2vh\" }}\n                placeholder={this.state.hospitalsel || \"Choose a Hospital\"}\n                value={this.state.hospitalsel || \"Choose a Hospital\"}\n              />\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Button\n                onClick={this.onSubmit}\n                variant=\"danger\"\n                style={{\n                  width: \"25vw\",\n                  marginTop: \"10vh\",\n                  marginLeft: \"5vw\",\n                  height: \"8vh\"\n                }}\n              >\n                Help Me\n              </Button>\n            </Col>\n          </Row>\n        </Form>\n        {hospitals}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default GoogleMap;\n"]},"metadata":{},"sourceType":"module"}