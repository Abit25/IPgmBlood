{"ast":null,"code":"var _jsxFileName = \"/Users/priya/Desktop/IPgm/onelife/src/components/map.js\";\nimport React, { Component, createRef } from \"react\";\nimport { Navbar, Nav, Form, Row, Col, Popover, OverlayTrigger, Spinner, Button } from \"react-bootstrap\";\nimport img2 from \"./heart.png\";\nimport img from \"./question.png\";\nimport \"./map.css\";\nimport axios from \"axios\";\nconst popover = React.createElement(Popover, {\n  id: \"popover-basic\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}, React.createElement(Popover.Title, {\n  as: \"h3\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}, \"Help\"), React.createElement(Popover.Content, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}, \"Listed towards your left are some symptoms/signs .You can select one or more as applicable.\"));\n\nconst Example = () => React.createElement(OverlayTrigger, {\n  trigger: \"click\",\n  placement: \"left\",\n  overlay: popover,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n}, React.createElement(\"img\", {\n  src: img,\n  style: {\n    height: \"35px\",\n    width: \"35px\",\n    position: \"absolute\",\n    right: \"3vw\",\n    top: \"35vh\"\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33\n  },\n  __self: this\n}));\n\nclass GoogleMap extends Component {\n  constructor(props) {\n    super(props);\n\n    this.createGoogleMap = () => {\n      console.log(\"1\");\n      var map = new window.google.maps.Map(this.googleMapRef.current, {\n        zoom: 14,\n        center: {\n          lat: 19.0968,\n          lng: 72.8517\n        }\n      });\n      return map;\n    };\n\n    this.createMarker = () => {\n      // var myLatLng = { lat: 43.642567, lng: -79.387054 };\n      // var marker = new window.google.maps.Marker({\n      //   position: myLatLng,\n      //   map: this.googleMap\n      // });\n      var myLatLng = 0;\n      var options = {\n        enableHighAccuracy: true\n      };\n      window.navigator.geolocation.getCurrentPosition(this.getPos, options);\n    };\n\n    this.callback = (results, status) => {\n      this.setState({\n        hospitals: results.slice(0, 5)\n      });\n      console.log(this.state);\n\n      if (status == window.google.maps.places.PlacesServiceStatus.OK) {\n        for (var i = 0; i < 5; i++) {\n          var place = results[i];\n          var marker2 = new window.google.maps.Marker({\n            position: place.geometry.location,\n            map: this.googleMap,\n            title: place.name\n          });\n        }\n      }\n    };\n\n    this.selHospital = e => {\n      console.log(e.target.value);\n      this.setState({\n        hospitalsel: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.persist();\n\n      if (!this.state.address) {\n        alert(\"Please wait for the map to load\");\n      } else {\n        console.log(\"State is \", this.state);\n        var fd = new FormData();\n        fd.append(\"fname\", this.state.fname);\n        fd.append(\"lname\", this.state.lname);\n        fd.append(\"address\", this.state.address);\n        fd.append(\"selHospital\", this.state.hospitalsel);\n        fd.append(\"phone\", this.state.phone);\n        fd.append(\"age\", this.state.age);\n        fd.append(\"symptoms\", this.state.symptoms);\n        axios.post(\"http://127.0.0.1:8000/request/\", fd).then(function (response) {\n          console.log(response);\n\n          if (response.data.status == 200) {\n            console.log(\"Button \", e.target.value);\n            e.target.innerHTML = \"Sent \";\n          }\n        });\n      }\n    };\n\n    this.state = {\n      symptoms: []\n    };\n    this.googleMapRef = createRef();\n  }\n\n  componentDidMount() {\n    const googleMapScript = document.createElement(\"script\");\n    googleMapScript.src = \"https://maps.googleapis.com/maps/api/js?key=\".concat(\"AIzaSyCpSyVOMNaAH_omRZGK_iRn1u_91Ot0Rcw\", \"&libraries=places\");\n    window.document.body.appendChild(googleMapScript);\n    googleMapScript.addEventListener(\"load\", () => {\n      this.googleMap = this.createGoogleMap(); // console.log(this.googleMap);\n\n      this.marker = this.createMarker();\n    });\n  }\n\n  render() {\n    let hospitals;\n\n    if (this.state.hospitals) {\n      hospitals = this.state.hospitals.map(hospital => {\n        return React.createElement(\"div\", {\n          style: {\n            marginLeft: \"3vw\",\n            marginTop: \"3vh\"\n          },\n          key: \"\".concat(hospital.name),\n          className: \"mb-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }, React.createElement(Form.Check, {\n          onChange: this.selHospital,\n          name: \"hospitalsel\",\n          type: \"radio\",\n          id: \"default-radio\",\n          label: \"\".concat(hospital.name),\n          value: \"\".concat(hospital.name),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        }));\n      });\n    } else {\n      hospitals = React.createElement(Spinner, {\n        animation: \"border\",\n        role: \"status\",\n        style: {\n          marginLeft: \"4vw\",\n          marginTop: \"6vh\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"sr-only\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, \"Loading...\"));\n    }\n\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      bg: \"dark\",\n      variant: \"dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(Navbar.Brand, {\n      href: \"#home\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      alt: \"\",\n      src: \"/logo.svg\",\n      width: \"30\",\n      height: \"30\",\n      className: \"d-inline-block align-top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }), \"One Life\"), React.createElement(Nav.Link, {\n      href: \"#home\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: img2,\n      style: {\n        height: \"40px\",\n        width: \"40px\",\n        textAlign: \"right\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      id: \"google-map\",\n      ref: this.googleMapRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }), React.createElement(Example, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }), React.createElement(Form, {\n      id: \"my-form\",\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      style: {\n        width: \"18vw\"\n      },\n      placeholder: \"First name\",\n      onChange: e => {\n        this.setState({\n          fname: e.target.value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    })), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      style: {\n        width: \"18vw\"\n      },\n      placeholder: \"Last name\",\n      onChange: e => {\n        this.setState({\n          lname: e.target.value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      style: {\n        width: \"18vw\",\n        marginTop: \"4vh\"\n      },\n      placeholder: \"Phone Number\",\n      onChange: e => {\n        this.setState({\n          phone: e.target.value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    })), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      style: {\n        width: \"18vw\",\n        marginTop: \"4vh\"\n      },\n      placeholder: \"Age\",\n      onChange: e => {\n        this.setState({\n          age: e.target.value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }))), React.createElement(Row, {\n      style: {\n        marginTop: \"3vh\",\n        width: \"7vw\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"formBasicCheckbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, React.createElement(Form.Check, {\n      type: \"checkbox\",\n      label: \"Bleeding\",\n      name: \"Bleeding\",\n      onChange: e => {\n        var t = e.target.checked;\n\n        if (t) {\n          var sym = this.state.symptoms;\n          sym.push(e.target.name);\n          this.setState({\n            symptoms: sym\n          });\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    })))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"formBasicCheckbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, React.createElement(Form.Check, {\n      type: \"checkbox\",\n      label: \"Severe Bleeding/Concussion\",\n      name: \"Severe Bleeding/Concussion\",\n      onChange: e => {\n        var t = e.target.checked;\n\n        if (t) {\n          var sym = this.state.symptoms;\n          sym.push(e.target.name);\n          this.setState({\n            symptoms: sym\n          });\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    })))), React.createElement(Row, {\n      style: {\n        width: \"7vw\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"formBasicCheckbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, React.createElement(Form.Check, {\n      type: \"checkbox\",\n      label: \"Unconscious\",\n      name: \"Unconscious\",\n      onChange: e => {\n        var t = e.target.checked;\n\n        if (t) {\n          var sym = this.state.symptoms;\n          sym.push(e.target.name);\n          this.setState({\n            symptoms: sym\n          });\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    })))), React.createElement(Row, {\n      style: {\n        width: \"10vw\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"formBasicCheckbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, React.createElement(Form.Check, {\n      type: \"checkbox\",\n      label: \"Animal Bite\",\n      name: \"Animal Bite\",\n      onChange: e => {\n        var t = e.target.checked;\n\n        if (t) {\n          var sym = this.state.symptoms;\n          sym.push(e.target.name);\n          this.setState({\n            symptoms: sym\n          });\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    })))), React.createElement(Row, {\n      style: {\n        width: \"10vw\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"formBasicCheckbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, React.createElement(Form.Check, {\n      type: \"checkbox\",\n      label: \"Heart Attack\",\n      name: \"Heart Attack\",\n      onChange: e => {\n        var t = e.target.checked;\n\n        if (t) {\n          var sym = this.state.symptoms;\n          sym.push(e.target.name);\n          this.setState({\n            symptoms: sym\n          });\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    })))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      id: \"hospitalsel\",\n      disabled: true,\n      style: {\n        width: \"38vw\",\n        marginTop: \"2vh\"\n      },\n      placeholder: this.state.hospitalsel || \"Choose a Hospital\",\n      value: this.state.hospitalsel || \"Choose a Hospital\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.onSubmit,\n      variant: \"danger\",\n      style: {\n        width: \"25vw\",\n        marginTop: \"10vh\",\n        marginLeft: \"5vw\",\n        height: \"8vh\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338\n      },\n      __self: this\n    }, \"Help Me\")))), hospitals);\n  }\n\n}\n\nexport default GoogleMap;","map":{"version":3,"sources":["/Users/priya/Desktop/IPgm/onelife/src/components/map.js"],"names":["React","Component","createRef","Navbar","Nav","Form","Row","Col","Popover","OverlayTrigger","Spinner","Button","img2","img","axios","popover","Example","height","width","position","right","top","GoogleMap","constructor","props","createGoogleMap","console","log","map","window","google","maps","Map","googleMapRef","current","zoom","center","lat","lng","createMarker","myLatLng","options","enableHighAccuracy","navigator","geolocation","getCurrentPosition","getPos","callback","results","status","setState","hospitals","slice","state","places","PlacesServiceStatus","OK","i","place","marker2","Marker","geometry","location","googleMap","title","name","selHospital","e","target","value","hospitalsel","onSubmit","persist","address","alert","fd","FormData","append","fname","lname","phone","age","symptoms","post","then","response","data","innerHTML","componentDidMount","googleMapScript","document","createElement","src","body","appendChild","addEventListener","marker","render","hospital","marginLeft","marginTop","textAlign","t","checked","sym","push"],"mappings":"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","sourcesContent":["import React, { Component, createRef } from \"react\";\nimport {\n  Navbar,\n  Nav,\n  Form,\n  Row,\n  Col,\n  Popover,\n  OverlayTrigger,\n  Spinner,\n  Button\n} from \"react-bootstrap\";\nimport img2 from \"./heart.png\";\nimport img from \"./question.png\";\nimport \"./map.css\";\nimport axios from \"axios\";\n\nconst popover = (\n  <Popover id=\"popover-basic\">\n    <Popover.Title as=\"h3\">Help</Popover.Title>\n    <Popover.Content>\n      Listed towards your left are some symptoms/signs .You can select one or\n      more as applicable.\n    </Popover.Content>\n  </Popover>\n);\n\nconst Example = () => (\n  <OverlayTrigger trigger=\"click\" placement=\"left\" overlay={popover}>\n    {/* <Button variant=\"success\" style={{ marginTop: \"15vh\", marginLeft: \"4vw\" }}>\n      What am I supposed to do now ?\n    </Button> */}\n    <img\n      src={img}\n      style={{\n        height: \"35px\",\n        width: \"35px\",\n        position: \"absolute\",\n        right: \"3vw\",\n        top: \"35vh\"\n      }}\n    />\n  </OverlayTrigger>\n);\n\nclass GoogleMap extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { symptoms: [] };\n    this.googleMapRef = createRef();\n  }\n\n  componentDidMount() {\n    const googleMapScript = document.createElement(\"script\");\n    googleMapScript.src = `https://maps.googleapis.com/maps/api/js?key=${\"AIzaSyCpSyVOMNaAH_omRZGK_iRn1u_91Ot0Rcw\"}&libraries=places`;\n    window.document.body.appendChild(googleMapScript);\n\n    googleMapScript.addEventListener(\"load\", () => {\n      this.googleMap = this.createGoogleMap();\n      // console.log(this.googleMap);\n      this.marker = this.createMarker();\n    });\n  }\n\n  createGoogleMap = () => {\n    console.log(\"1\");\n    var map = new window.google.maps.Map(this.googleMapRef.current, {\n      zoom: 14,\n      center: {\n        lat: 19.0968,\n        lng: 72.8517\n      }\n    });\n    return map;\n  };\n\n  createMarker = () => {\n    // var myLatLng = { lat: 43.642567, lng: -79.387054 };\n    // var marker = new window.google.maps.Marker({\n    //   position: myLatLng,\n    //   map: this.googleMap\n    // });\n    var myLatLng = 0;\n    var options = {\n      enableHighAccuracy: true\n    };\n    window.navigator.geolocation.getCurrentPosition(this.getPos, options);\n  };\n\n  callback = (results, status) => {\n    this.setState({ hospitals: results.slice(0, 5) });\n    console.log(this.state);\n    if (status == window.google.maps.places.PlacesServiceStatus.OK) {\n      for (var i = 0; i < 5; i++) {\n        var place = results[i];\n        var marker2 = new window.google.maps.Marker({\n          position: place.geometry.location,\n          map: this.googleMap,\n          title: place.name\n        });\n      }\n    }\n  };\n\n  selHospital = e => {\n    console.log(e.target.value);\n    this.setState({ hospitalsel: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.persist();\n    if (!this.state.address) {\n      alert(\"Please wait for the map to load\");\n    } else {\n      console.log(\"State is \", this.state);\n      var fd = new FormData();\n      fd.append(\"fname\", this.state.fname);\n      fd.append(\"lname\", this.state.lname);\n      fd.append(\"address\", this.state.address);\n      fd.append(\"selHospital\", this.state.hospitalsel);\n      fd.append(\"phone\", this.state.phone);\n      fd.append(\"age\", this.state.age);\n      fd.append(\"symptoms\", this.state.symptoms);\n      axios.post(\"http://127.0.0.1:8000/request/\", fd).then(function(response) {\n        console.log(response);\n        if (response.data.status == 200) {\n          console.log(\"Button \", e.target.value);\n          e.target.innerHTML = \"Sent \";\n        }\n      });\n    }\n  };\n\n  render() {\n    let hospitals;\n    if (this.state.hospitals) {\n      hospitals = this.state.hospitals.map(hospital => {\n        return (\n          <div\n            style={{ marginLeft: \"3vw\", marginTop: \"3vh\" }}\n            key={`${hospital.name}`}\n            className=\"mb-3\"\n          >\n            <Form.Check\n              onChange={this.selHospital}\n              name=\"hospitalsel\"\n              type={\"radio\"}\n              id={`default-radio`}\n              label={`${hospital.name}`}\n              value={`${hospital.name}`}\n            />\n          </div>\n        );\n      });\n    } else {\n      hospitals = (\n        <Spinner\n          animation=\"border\"\n          role=\"status\"\n          style={{ marginLeft: \"4vw\", marginTop: \"6vh\" }}\n        >\n          <span className=\"sr-only\">Loading...</span>\n        </Spinner>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <Navbar bg=\"dark\" variant=\"dark\">\n          <Navbar.Brand href=\"#home\">\n            <img\n              alt=\"\"\n              src=\"/logo.svg\"\n              width=\"30\"\n              height=\"30\"\n              className=\"d-inline-block align-top\"\n            />\n            {\"One Life\"}\n          </Navbar.Brand>\n          <Nav.Link href=\"#home\">\n            <img\n              src={img2}\n              style={{ height: \"40px\", width: \"40px\", textAlign: \"right\" }}\n            />\n          </Nav.Link>\n        </Navbar>\n        <div id=\"google-map\" ref={this.googleMapRef} />\n        <Example />\n        <Form id=\"my-form\" onSubmit={this.onSubmit}>\n          <Row>\n            <Col>\n              <Form.Control\n                style={{ width: \"18vw\" }}\n                placeholder=\"First name\"\n                onChange={e => {\n                  this.setState({ fname: e.target.value });\n                }}\n              />\n            </Col>\n            <Col>\n              <Form.Control\n                style={{ width: \"18vw\" }}\n                placeholder=\"Last name\"\n                onChange={e => {\n                  this.setState({ lname: e.target.value });\n                }}\n              />\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Form.Control\n                style={{ width: \"18vw\", marginTop: \"4vh\" }}\n                placeholder=\"Phone Number\"\n                onChange={e => {\n                  this.setState({ phone: e.target.value });\n                }}\n              />\n            </Col>\n            <Col>\n              <Form.Control\n                style={{ width: \"18vw\", marginTop: \"4vh\" }}\n                placeholder=\"Age\"\n                onChange={e => {\n                  this.setState({ age: e.target.value });\n                }}\n              />\n            </Col>\n          </Row>\n          <Row style={{ marginTop: \"3vh\", width: \"7vw\" }}>\n            <Col>\n              <Form.Group controlId=\"formBasicCheckbox\">\n                <Form.Check\n                  type=\"checkbox\"\n                  label=\"Bleeding\"\n                  name=\"Bleeding\"\n                  onChange={e => {\n                    var t = e.target.checked;\n                    if (t) {\n                      var sym = this.state.symptoms;\n                      sym.push(e.target.name);\n                      this.setState({ symptoms: sym });\n                    }\n                  }}\n                />\n              </Form.Group>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Form.Group controlId=\"formBasicCheckbox\">\n                <Form.Check\n                  type=\"checkbox\"\n                  label=\"Severe Bleeding/Concussion\"\n                  name=\"Severe Bleeding/Concussion\"\n                  onChange={e => {\n                    var t = e.target.checked;\n                    if (t) {\n                      var sym = this.state.symptoms;\n                      sym.push(e.target.name);\n                      this.setState({ symptoms: sym });\n                    }\n                  }}\n                />\n              </Form.Group>\n            </Col>\n          </Row>\n          <Row style={{ width: \"7vw\" }}>\n            <Col>\n              <Form.Group controlId=\"formBasicCheckbox\">\n                <Form.Check\n                  type=\"checkbox\"\n                  label=\"Unconscious\"\n                  name=\"Unconscious\"\n                  onChange={e => {\n                    var t = e.target.checked;\n                    if (t) {\n                      var sym = this.state.symptoms;\n                      sym.push(e.target.name);\n                      this.setState({ symptoms: sym });\n                    }\n                  }}\n                />\n              </Form.Group>\n            </Col>\n          </Row>\n          <Row style={{ width: \"10vw\" }}>\n            <Col>\n              <Form.Group controlId=\"formBasicCheckbox\">\n                <Form.Check\n                  type=\"checkbox\"\n                  label=\"Animal Bite\"\n                  name=\"Animal Bite\"\n                  onChange={e => {\n                    var t = e.target.checked;\n                    if (t) {\n                      var sym = this.state.symptoms;\n                      sym.push(e.target.name);\n                      this.setState({ symptoms: sym });\n                    }\n                  }}\n                />\n              </Form.Group>\n            </Col>\n          </Row>\n          <Row style={{ width: \"10vw\" }}>\n            <Col>\n              <Form.Group controlId=\"formBasicCheckbox\">\n                <Form.Check\n                  type=\"checkbox\"\n                  label=\"Heart Attack\"\n                  name=\"Heart Attack\"\n                  onChange={e => {\n                    var t = e.target.checked;\n                    if (t) {\n                      var sym = this.state.symptoms;\n                      sym.push(e.target.name);\n                      this.setState({ symptoms: sym });\n                    }\n                  }}\n                />\n              </Form.Group>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Form.Control\n                id=\"hospitalsel\"\n                disabled\n                style={{ width: \"38vw\", marginTop: \"2vh\" }}\n                placeholder={this.state.hospitalsel || \"Choose a Hospital\"}\n                value={this.state.hospitalsel || \"Choose a Hospital\"}\n              />\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Button\n                onClick={this.onSubmit}\n                variant=\"danger\"\n                style={{\n                  width: \"25vw\",\n                  marginTop: \"10vh\",\n                  marginLeft: \"5vw\",\n                  height: \"8vh\"\n                }}\n              >\n                Help Me\n              </Button>\n            </Col>\n          </Row>\n        </Form>\n        {hospitals}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default GoogleMap;\n"]},"metadata":{},"sourceType":"module"}