{"ast":null,"code":"import _defineProperty from \"/Users/priya/Desktop/IPgm/onelife/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/priya/Desktop/IPgm/onelife/src/components/signup.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport \"antd/es/form/style/css\";\nimport \"antd/es/input/style/css\";\nimport \"antd/es/tooltip/style/css\";\nimport \"antd/es/icon/style/css\";\nimport \"antd/es/cascader/style/css\";\nimport \"antd/es/select/style/css\";\nimport \"antd/es/row/style/css\";\nimport \"antd/es/col/style/css\";\nimport \"antd/es/checkbox/style/css\";\nimport \"antd/es/button/style/css\";\nimport \"antd/es/auto-complete/style/css\";\nimport { Form, Input, Tooltip, Icon, Cascader, Select, Row, Col, Checkbox, Button, AutoComplete } from \"antd\";\n\nfunction onChange(value) {\n  console.log(\"selected \".concat(value));\n}\n\nfunction onBlur() {\n  console.log(\"blur\");\n}\n\nfunction onFocus() {\n  console.log(\"focus\");\n}\n\nfunction onSearch(val) {\n  console.log(\"search:\", val);\n}\n\nconst Option = Select.Option;\nconst AutoCompleteOption = AutoComplete.Option;\n\nclass RegistrationForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      confirmDirty: false,\n      autoCompleteResult: []\n    };\n\n    this.on_change = e => {\n      const name = e.target.name;\n      const value = e.target.value;\n      this.setState(prevstate => {\n        const newState = _objectSpread({}, prevstate);\n\n        newState[name] = value;\n        return newState;\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFieldsAndScroll((err, values) => {\n        if (!err) {\n          console.log(\"Received values of form: \", values);\n        }\n      });\n    };\n\n    this.handleConfirmBlur = e => {\n      const value = e.target.value;\n      this.setState({\n        confirmDirty: this.state.confirmDirty || !!value\n      });\n    };\n\n    this.compareToFirstPassword = (rule, value, callback) => {\n      const form = this.props.form;\n\n      if (value && value !== form.getFieldValue(\"password\")) {\n        callback(\"Two passwords that you enter is inconsistent!\");\n      } else {\n        callback();\n      }\n    };\n\n    this.validateToNextPassword = (rule, value, callback) => {\n      const form = this.props.form;\n\n      if (value && this.state.confirmDirty) {\n        form.validateFields([\"confirm\"], {\n          force: true\n        });\n      }\n\n      callback();\n    };\n\n    this.handleWebsiteChange = value => {\n      let autoCompleteResult;\n\n      if (!value) {\n        autoCompleteResult = [];\n      } else {\n        autoCompleteResult = [\".com\", \".org\", \".net\"].map(domain => \"\".concat(value).concat(domain));\n      }\n\n      this.setState({\n        autoCompleteResult\n      });\n    };\n  }\n\n  render() {\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    const autoCompleteResult = this.state.autoCompleteResult;\n    const formItemLayout = {\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 8\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      }\n    };\n    const tailFormItemLayout = {\n      wrapperCol: {\n        xs: {\n          span: 24,\n          offset: 0\n        },\n        sm: {\n          span: 16,\n          offset: 8\n        }\n      }\n    };\n    const prefixSelector = getFieldDecorator(\"prefix\", {\n      initialValue: \"91\"\n    })(React.createElement(Select, {\n      style: {\n        width: 70\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(Option, {\n      value: \"91\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"+91\")));\n    return React.createElement(Form, Object.assign({}, formItemLayout, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }), React.createElement(Form.Item, {\n      label: \"E-mail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, getFieldDecorator(\"email\", {\n      rules: [{\n        type: \"email\",\n        message: \"The input is not valid E-mail!\"\n      }, {\n        required: true,\n        message: \"Please input your E-mail!\"\n      }]\n    })(React.createElement(Input, {\n      onChange: this.on_change,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"Password\",\n      hasFeedback: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, getFieldDecorator(\"password\", {\n      rules: [{\n        required: true,\n        message: \"Please input your password!\"\n      }, {\n        validator: this.validateToNextPassword\n      }]\n    })(React.createElement(Input.Password, {\n      onChange: this.on_change,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"Confirm Password\",\n      hasFeedback: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, getFieldDecorator(\"confirm\", {\n      rules: [{\n        required: true,\n        message: \"Please confirm your password!\"\n      }, {\n        validator: this.compareToFirstPassword\n      }]\n    })(React.createElement(Input.Password, {\n      onBlur: this.handleConfirmBlur,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, \"Username\\xA0\", React.createElement(Tooltip, {\n        title: \"What do you want others to call you?\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"question-circle-o\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, getFieldDecorator(\"username\", {\n      rules: [{\n        required: true,\n        message: \"Please input your username!\",\n        whitespace: true\n      }]\n    })(React.createElement(Input, {\n      onChange: this.on_change,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"Phone Number\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, getFieldDecorator(\"phone\", {\n      rules: [{\n        required: true,\n        message: \"Please input your phone number!\"\n      }]\n    })(React.createElement(Input, {\n      onChange: this.on_change,\n      addonBefore: prefixSelector,\n      style: {\n        width: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"Type\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, getFieldDecorator(\"type\", {\n      rules: [{\n        required: true,\n        message: \"Please select a type\"\n      }]\n    })(React.createElement(Select, {\n      onChange: this.on_change,\n      showSearch: true,\n      style: {\n        width: 200\n      },\n      optionFilterProp: \"children\",\n      onChange: onChange,\n      onFocus: onFocus,\n      onBlur: onBlur,\n      onSearch: onSearch,\n      filterOption: (input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, React.createElement(Option, {\n      value: \"Hospital\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, \"Hospital\"), React.createElement(Option, {\n      value: \"User\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, \"User\")))), React.createElement(Form.Item, Object.assign({}, tailFormItemLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, \"Register\")));\n  }\n\n}\n\nconst WrappedRegistrationForm = Form.create({\n  name: \"register\"\n})(RegistrationForm);\nexport default WrappedRegistrationForm;","map":{"version":3,"sources":["/Users/priya/Desktop/IPgm/onelife/src/components/signup.js"],"names":["React","Form","Input","Tooltip","Icon","Cascader","Select","Row","Col","Checkbox","Button","AutoComplete","onChange","value","console","log","onBlur","onFocus","onSearch","val","Option","AutoCompleteOption","RegistrationForm","Component","state","confirmDirty","autoCompleteResult","on_change","e","name","target","setState","prevstate","newState","handleSubmit","preventDefault","props","form","validateFieldsAndScroll","err","values","handleConfirmBlur","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","validateFields","force","handleWebsiteChange","map","domain","render","getFieldDecorator","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","prefixSelector","initialValue","width","rules","type","message","required","validator","whitespace","input","option","children","toLowerCase","indexOf","WrappedRegistrationForm","create"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"antd/es/form/style/css\";\nimport \"antd/es/input/style/css\";\nimport \"antd/es/tooltip/style/css\";\nimport \"antd/es/icon/style/css\";\nimport \"antd/es/cascader/style/css\";\nimport \"antd/es/select/style/css\";\nimport \"antd/es/row/style/css\";\nimport \"antd/es/col/style/css\";\nimport \"antd/es/checkbox/style/css\";\nimport \"antd/es/button/style/css\";\nimport \"antd/es/auto-complete/style/css\";\nimport {\n  Form,\n  Input,\n  Tooltip,\n  Icon,\n  Cascader,\n  Select,\n  Row,\n  Col,\n  Checkbox,\n  Button,\n  AutoComplete\n} from \"antd\";\n\nfunction onChange(value) {\n  console.log(`selected ${value}`);\n}\n\nfunction onBlur() {\n  console.log(\"blur\");\n}\n\nfunction onFocus() {\n  console.log(\"focus\");\n}\n\nfunction onSearch(val) {\n  console.log(\"search:\", val);\n}\n\nconst { Option } = Select;\nconst AutoCompleteOption = AutoComplete.Option;\n\nclass RegistrationForm extends React.Component {\n  state = {\n    confirmDirty: false,\n    autoCompleteResult: []\n  };\n\n  on_change = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState(prevstate => {\n      const newState = { ...prevstate };\n      newState[name] = value;\n      return newState;\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        console.log(\"Received values of form: \", values);\n      }\n    });\n  };\n\n  handleConfirmBlur = e => {\n    const { value } = e.target;\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n  };\n\n  compareToFirstPassword = (rule, value, callback) => {\n    const { form } = this.props;\n    if (value && value !== form.getFieldValue(\"password\")) {\n      callback(\"Two passwords that you enter is inconsistent!\");\n    } else {\n      callback();\n    }\n  };\n\n  validateToNextPassword = (rule, value, callback) => {\n    const { form } = this.props;\n    if (value && this.state.confirmDirty) {\n      form.validateFields([\"confirm\"], { force: true });\n    }\n    callback();\n  };\n\n  handleWebsiteChange = value => {\n    let autoCompleteResult;\n    if (!value) {\n      autoCompleteResult = [];\n    } else {\n      autoCompleteResult = [\".com\", \".org\", \".net\"].map(\n        domain => `${value}${domain}`\n      );\n    }\n    this.setState({ autoCompleteResult });\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const { autoCompleteResult } = this.state;\n\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 }\n      }\n    };\n    const tailFormItemLayout = {\n      wrapperCol: {\n        xs: {\n          span: 24,\n          offset: 0\n        },\n        sm: {\n          span: 16,\n          offset: 8\n        }\n      }\n    };\n    const prefixSelector = getFieldDecorator(\"prefix\", {\n      initialValue: \"91\"\n    })(\n      <Select style={{ width: 70 }}>\n        <Option value=\"91\">+91</Option>\n      </Select>\n    );\n\n    return (\n      <Form {...formItemLayout} onSubmit={this.handleSubmit}>\n        <Form.Item label=\"E-mail\">\n          {getFieldDecorator(\"email\", {\n            rules: [\n              {\n                type: \"email\",\n                message: \"The input is not valid E-mail!\"\n              },\n              {\n                required: true,\n                message: \"Please input your E-mail!\"\n              }\n            ]\n          })(<Input onChange={this.on_change} />)}\n        </Form.Item>\n        <Form.Item label=\"Password\" hasFeedback>\n          {getFieldDecorator(\"password\", {\n            rules: [\n              {\n                required: true,\n                message: \"Please input your password!\"\n              },\n              {\n                validator: this.validateToNextPassword\n              }\n            ]\n          })(<Input.Password onChange={this.on_change} />)}\n        </Form.Item>\n        <Form.Item label=\"Confirm Password\" hasFeedback>\n          {getFieldDecorator(\"confirm\", {\n            rules: [\n              {\n                required: true,\n                message: \"Please confirm your password!\"\n              },\n              {\n                validator: this.compareToFirstPassword\n              }\n            ]\n          })(<Input.Password onBlur={this.handleConfirmBlur} />)}\n        </Form.Item>\n        <Form.Item\n          label={\n            <span>\n              Username&nbsp;\n              <Tooltip title=\"What do you want others to call you?\">\n                <Icon type=\"question-circle-o\" />\n              </Tooltip>\n            </span>\n          }\n        >\n          {getFieldDecorator(\"username\", {\n            rules: [\n              {\n                required: true,\n                message: \"Please input your username!\",\n                whitespace: true\n              }\n            ]\n          })(<Input onChange={this.on_change} />)}\n        </Form.Item>\n\n        <Form.Item label=\"Phone Number\">\n          {getFieldDecorator(\"phone\", {\n            rules: [\n              { required: true, message: \"Please input your phone number!\" }\n            ]\n          })(\n            <Input\n              onChange={this.on_change}\n              addonBefore={prefixSelector}\n              style={{ width: \"100%\" }}\n            />\n          )}\n        </Form.Item>\n\n        <Form.Item label=\"Type\">\n          {getFieldDecorator(\"type\", {\n            rules: [{ required: true, message: \"Please select a type\" }]\n          })(\n            <Select\n              onChange={this.on_change}\n              showSearch\n              style={{ width: 200 }}\n              optionFilterProp=\"children\"\n              onChange={onChange}\n              onFocus={onFocus}\n              onBlur={onBlur}\n              onSearch={onSearch}\n              filterOption={(input, option) =>\n                option.props.children\n                  .toLowerCase()\n                  .indexOf(input.toLowerCase()) >= 0\n              }\n            >\n              <Option value=\"Hospital\">Hospital</Option>\n              <Option value=\"User\">User</Option>\n            </Select>\n          )}\n        </Form.Item>\n        <Form.Item {...tailFormItemLayout}>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Register\n          </Button>\n        </Form.Item>\n      </Form>\n    );\n  }\n}\nconst WrappedRegistrationForm = Form.create({ name: \"register\" })(\n  RegistrationForm\n);\n\nexport default WrappedRegistrationForm;\n"]},"metadata":{},"sourceType":"module"}